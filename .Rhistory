shiny::runApp()
runApp('~/Desktop/R Shiny Project')
runApp()
shiny::runApp()
runApp()
input$roomtype
airbnb<-read.csv('listings.csv')
View(airbnb)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
c(75,125)
x=c(75,125)
range(4,x)
4 %inrange% x
4 %between% x
x[1]
x[2]
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
x=c("Arizona", "Arkansas", "Connecticut")
'Arizona' %in% x
'California' %in% x
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
mapdata <- airbnb %>%
mutate(n=1) %>%
filter(room_type=="Private room") %>%
group_by(neighbourhood,neighbourhood_group) %>%
summarise(
long=mean(longitude),
lat=mean(latitude),
avg_price=round(mean(price),0),
avg_reviews=mean(number_of_reviews),
num_listings=sum(n)) %>%
mutate(info=paste("$",as.character(round(mapdata$avg_price,0)),"/night, ",
mapdata$neighbourhood," (",mapdata$neighbourhood_group,")", sep=""))
mapdata <- airbnb %>%
mutate(n=1) %>%
filter(room_type=="Private room") %>%
group_by(neighbourhood,neighbourhood_group) %>%
summarise(
long=mean(longitude),
lat=mean(latitude),
avg_price=round(mean(price),0),
avg_reviews=mean(number_of_reviews),
num_listings=sum(n)) %>%
mutate(info=paste("$",as.character(round(avg_price,0)),"/night, ",
neighbourhood," (",neighbourhood_group,")", sep=""))
View(mapdata)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
View(mapdata)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
airbnb %>%
mutate(n=1) %>%
filter(room_type=="Private room",neighbourhood_group=="Brooklyn") %>%
group_by(neighbourhood,neighbourhood_group) %>%
summarise(
long=mean(longitude),
lat=mean(latitude),
avg_price=round(mean(price),0),
avg_reviews=round(mean(number_of_reviews),0),
num_listings=sum(n)) %>%
mutate(text =
paste(neighbourhood,", ", neighbourhood_group,
"\nAverage Price: ", avg_price,
"\nAverage Number of Reviews: ", avg_reviews,
"\nTotal Listings: ", num_listings, sep=""))  %>%
arrange(desc(num_listings))
fig
library(plotly)
df <- read.csv('https://raw.githubusercontent.com/plotly/datasets/master/2014_us_cities.csv')
df$q <- with(df, cut(pop, quantile(pop)))
levels(df$q) <- paste(c("1st", "2nd", "3rd", "4th", "5th"), "Quantile")
df$q <- as.ordered(df$q)
g <- list(
scope = 'usa',
projection = list(type = 'albers usa'),
showland = TRUE,
landcolor = toRGB("gray85"),
subunitwidth = 1,
countrywidth = 1,
subunitcolor = toRGB("white"),
countrycolor = toRGB("white")
)
fig <- plot_geo(df, locationmode = 'USA-states', sizes = c(1, 250))
fig <- fig %>% add_markers(
x = ~lon, y = ~lat, size = ~pop, color = ~q, hoverinfo = "text",
text = ~paste(df$name, "<br />", df$pop/1e6, " million")
)
fig <- fig %>% layout(title = '2014 US city populations<br>(Click legend to toggle)', geo = g)
fig
plot_geo(df, locationmode = 'USA-states', sizes = c(1, 250))
plot_geo(df, locationmode = 'USA-states', sizes = c(1, 250)) %>% add_markers(
x = ~lon, y = ~lat, size = ~pop, color = ~q, hoverinfo = "text",
text = ~paste(df$name, "<br />", df$pop/1e6, " million")
)
plot_geo(df, locationmode = 'USA-states', sizes = c(1, 250)) %>% add_markers(
x = ~lon, y = ~lat, size = ~pop, color = ~q, hoverinfo = "text",
text = ~paste(df$name, "<br />", df$pop/1e6, " million")) %>%
layout(title = '2014 US city populations<br>(Click legend to toggle)', geo = g)
test <-  airbnb %>%
mutate(n=1) %>%
filter(room_type=="Private room",neighbourhood_group=="Brooklyn") %>%
group_by(neighbourhood,neighbourhood_group) %>%
summarise(
long=mean(longitude),
lat=mean(latitude),
avg_price=round(mean(price),0),
avg_reviews=round(mean(number_of_reviews),0),
num_listings=sum(n)) %>%
mutate(text =
paste(neighbourhood,", ", neighbourhood_group,
"\nAverage Price: ", avg_price,
"\nAverage Number of Reviews: ", avg_reviews,
"\nTotal Listings: ", num_listings, sep=""))  %>%
arrange(desc(num_listings))
plot_geo(test[1:5,], locationmode = 'USA-states', sizes = c(1, 250)) %>% add_markers(
x = ~long, y = ~lat, size = ~avg_reviews, color = ~q, hoverinfo = "text")) %>%
layout(title = '2014 US city populations<br>(Click legend to toggle)', geo = g)
plot_geo(test[1:5,], locationmode = 'USA-states', sizes = c(1, 250)) %>% add_markers(
x = ~long, y = ~lat, size = ~avg_reviews, color = ~q, hoverinfo = "text"))
plot_geo(test[1:5,], locationmode = 'USA-states', sizes = c(1, 250)) %>% add_markers(
x = ~long, y = ~lat, size = ~avg_reviews, color = ~q, hoverinfo = "text"))
fig
plot_geo(df, lat = ~lat, lon = ~long) %>% add_markers(
text = ~paste(airport, city, state, paste("Arrivals:", cnt), sep = "<br />"),
color = ~cnt, symbol = I("square"), size = I(8), hoverinfo = "text"
)
df <- read.csv('https://raw.githubusercontent.com/plotly/datasets/master/2011_february_us_airport_traffic.csv')
plot_geo(df, lat = ~lat, lon = ~long)
plot_geo(df, lat = ~lat, lon = ~long) %>% add_markers(
text = ~paste(airport, city, state, paste("Arrivals:", cnt), sep = "<br />"),
color = ~cnt, symbol = I("square"), size = I(8), hoverinfo = "text"
)
plot_geo(df, lat = ~lat, lon = ~long) %>% add_markers(
text = ~paste(airport, city, state, paste("Arrivals:", cnt), sep = "<br />"),
color = ~cnt, symbol = I("square"), size = I(8), hoverinfo = "text" %>% colorbar(title = "Incoming flights<br />February 2011")
%>% layout(
title = 'Most trafficked US airports<br />(Hover for airport)', geo = g
)
)
plot_geo(df, lat = ~lat, lon = ~long) %>%
add_markers(
text = ~paste(airport, city, state, paste("Arrivals:", cnt), sep = "<br />"),
color = ~cnt, symbol = I("square"), size = I(8), hoverinfo = "text" %>%
colorbar(title = "Incoming flights<br />February 2011") %>%
layout(title = 'Most trafficked US airports<br />(Hover for airport)', geo = g)
)
add_markers(
text = ~paste(airport, city, state, paste("Arrivals:", cnt), sep = "<br />"),
color = ~cnt, symbol = I("square"), size = I(8), hoverinfo = "text") %>%
colorbar(title = "Incoming flights<br />February 2011") %>%
layout(title = 'Most trafficked US airports<br />(Hover for airport)', geo = g)
plot_geo(df, lat = ~lat, lon = ~long) %>%
add_markers(
text = "TEST",
color = ~cnt, symbol = I("square"), size = I(8), hoverinfo = "text") %>%
colorbar(title = "Incoming flights<br />February 2011") %>%
layout(title = 'Most trafficked US airports<br />(Hover for airport)', geo = g)
plot_geo(test, lat = ~lat, lon = ~long) %>%
add_markers(
text = "TEST",
color = ~avg_price, symbol = I("square"), size = I(8), hoverinfo = "text") %>%
colorbar(title = "Incoming flights<br />February 2011") %>%
layout(title = 'Most trafficked US airports<br />(Hover for airport)', geo = g)
test[1:5,] %>%
leaflet() %>%
addProviderTiles("CartoDB.Positron") %>%
addCircleMarkers(~long, ~lat,
color= ~boroughcolors(avg_price),
fillOpacity = 1,
radius=1,
label = ~text) %>%
addLegend('bottomright',
pal=boroughcolors,
values=~avg_price,
title = "Number of Listings")
test[1:5,] %>%
leaflet() %>%
addProviderTiles("CartoDB.Positron") %>%
addMarkers(~long, ~lat, label = ~text) %>%
addLegend('bottomright',
pal=boroughcolors,
values=~avg_price,
title = "Number of Listings")
test[1:5,] %>%
leaflet() %>%
addProviderTiles("CartoDB.Positron") %>%
addMarkers(~long, ~lat, label = ~text)
maptext <- paste(sep = "<br/>",
"<b><a href='http://www.samurainoodle.com'>Samurai Noodle</a></b>",
"606 5th Ave. S",
"Seattle, WA 98138"
)
test[1:5,] %>%
leaflet() %>%
addProviderTiles("CartoDB.Positron") %>%
addMarkers(~long, ~lat, label = ~maptext)
options = popupOptions(closeButton = FALSE)
test[1:5,] %>%
leaflet() %>%
addProviderTiles("CartoDB.Positron") %>%
addMarkers(~long, ~lat, label = ~maptext) %>%
addPopups(-122.327298, 47.597131, content,
options = popupOptions(closeButton = FALSE)
)
test[1:5,] %>%
leaflet() %>%
addProviderTiles("CartoDB.Positron") %>%
addMarkers(~long, ~lat, label = ~maptext) %>%
addPopups(-122.327298, 47.597131, maptext,
options = popupOptions(closeButton = FALSE)
)
test[1:5,] %>%
leaflet() %>%
addProviderTiles("CartoDB.Positron") %>%
addMarkers(~long, ~lat, label = ~maptext) %>%
addPopups(~long, ~lat, maptext,
options = popupOptions(closeButton = FALSE))
maptext <- paste(sep = test$neighbourhood,
"606 5th Ave. S",
"Seattle, WA 98138")
maptext <- paste(sep = "<br/>", neighbourhood,
"606 5th Ave. S",
"Seattle, WA 98138"
)
maptext <- paste(sep = "<br/>", test$neighbourhood,
"606 5th Ave. S",
"Seattle, WA 98138"
)
test[1:5,] %>%
leaflet() %>%
addProviderTiles("CartoDB.Positron") %>%
addMarkers(~long, ~lat, label = ~maptext) %>%
addPopups(~long, ~lat, maptext,
options = popupOptions(closeButton = FALSE))
test[1:5,] %>%
leaflet() %>%
addProviderTiles("CartoDB.Positron") %>%
addMarkers(~long, ~lat, label = ~neighbourhood)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
